
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startnonassocEQNELTGTLEGEleftPLUSMINUSleftTIMESDIVIDEMODAND BOOL CHAR CHARVAL COMMA DECREMENT DIVIDE DOUBLE ELSE EQ EQUAL FALSE FLOAT FOR GE GT ID IF INCREMENT INT LBRACE LE LPAREN LT MAIN MINUS MOD NE NOT NUMBER OR PLUS PROGRAM RBRACE RPAREN SEMI STRING STRINGVAL TIMES TRUE VOID WHILE WRITE WRITELNstart : PROGRAM MAIN LBRACE body RBRACEbody : declaration_list statement_listdeclaration_list : declaration\n                        | declaration_list declaration\n                        | empty declaration : type_specifier variable_list SEMI type_specifier : INT\n                        | BOOL\n                        | STRING\n                        | DOUBLE\n                        | FLOAT\n                        | CHAR  variable_list : ID\n                     | variable_list COMMA ID\n                     | assignment statement_list : statement\n                      | statement_list statement\n                      | empty statement : assignment SEMI\n                 | print SEMI\n                 | unary\n                 | if_statement\n                 | for_statement\n                 | while_statement\n                 | func_statement_declaration\n                 | func_statement_callassignment : ID EQUAL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expressionexpression : expression EQ expression\n                   | expression NE expression\n                   | expression LT expression\n                   | expression GT expression\n                   | expression LE expression\n                   | expression GE expressionexpression : NOT expression\n                  | expression AND expression\n                  | expression OR expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | STRINGVAL\n                  | CHARVAL\n                  | TRUE\n                  | FALSEexpression : IDprint : WRITELN LPAREN expression RPAREN\n             | WRITE LPAREN expression RPARENunary : ID INCREMENT SEMI\n             | ID DECREMENT SEMI\n             | ID INCREMENT\n             | ID DECREMENTif_statement : IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE\n                    | IF LPAREN expression RPAREN LBRACE statement_list RBRACEfor_statement : FOR LPAREN assignment SEMI expression SEMI unary RPAREN LBRACE statement_list RBRACE\n                     | FOR LPAREN assignment SEMI expression SEMI assignment RPAREN LBRACE statement_list RBRACEwhile_statement : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfunc_statement_declaration : VOID ID LPAREN RPAREN LBRACE statement_list RBRACEfunc_statement_call : ID LPAREN RPAREN SEMIempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,16,],[0,-1,]),'MAIN':([2,],[3,]),'LBRACE':([3,92,94,95,124,125,126,],[4,110,112,113,127,128,129,]),'INT':([4,6,7,8,18,52,],[10,10,-3,-5,-4,-6,]),'BOOL':([4,6,7,8,18,52,],[11,11,-3,-5,-4,-6,]),'STRING':([4,6,7,8,18,52,],[12,12,-3,-5,-4,-6,]),'DOUBLE':([4,6,7,8,18,52,],[13,13,-3,-5,-4,-6,]),'FLOAT':([4,6,7,8,18,52,],[14,14,-3,-5,-4,-6,]),'CHAR':([4,6,7,8,18,52,],[15,15,-3,-5,-4,-6,]),'ID':([4,6,7,8,9,10,11,12,13,14,15,17,18,19,20,23,24,25,26,27,28,35,39,40,41,42,43,44,46,47,48,49,50,52,53,56,57,63,64,74,75,76,77,78,79,80,81,82,83,84,85,86,89,93,110,112,113,114,115,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,29,-3,-5,37,-7,-8,-9,-10,-11,-12,29,-4,-16,-18,-21,-22,-23,-24,-25,-26,51,-17,-19,-20,54,-53,-54,54,54,54,70,54,-6,73,54,54,-51,-52,54,54,54,54,54,54,54,54,54,54,54,54,54,-61,54,29,29,29,29,121,29,29,-56,-59,-60,29,29,29,29,29,29,-55,-58,-57,]),'WRITELN':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,30,-3,-5,30,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,30,30,30,30,30,30,-56,-59,-60,30,30,30,30,30,30,-55,-58,-57,]),'WRITE':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,31,-3,-5,31,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,31,31,31,31,31,31,-56,-59,-60,31,31,31,31,31,31,-55,-58,-57,]),'IF':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,32,-3,-5,32,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,32,32,32,32,32,32,-56,-59,-60,32,32,32,32,32,32,-55,-58,-57,]),'FOR':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,33,-3,-5,33,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,33,33,33,33,33,33,-56,-59,-60,33,33,33,33,33,33,-55,-58,-57,]),'WHILE':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,34,-3,-5,34,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,34,34,34,34,34,34,-56,-59,-60,34,34,34,34,34,34,-55,-58,-57,]),'VOID':([4,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,35,-3,-5,35,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,35,35,35,35,35,35,-56,-59,-60,35,35,35,35,35,35,-55,-58,-57,]),'RBRACE':([4,5,6,7,8,17,18,19,20,23,24,25,26,27,28,39,40,41,43,44,52,63,64,89,110,112,113,114,116,117,118,122,123,127,128,129,130,131,132,133,134,135,],[-62,16,-62,-3,-5,-2,-4,-16,-18,-21,-22,-23,-24,-25,-26,-17,-19,-20,-53,-54,-6,-51,-52,-61,-62,-62,-62,118,122,123,-56,-59,-60,-62,-62,-62,133,134,135,-55,-58,-57,]),'SEMI':([21,22,36,37,38,43,44,54,55,58,59,60,61,62,65,69,73,87,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[40,41,52,-13,-15,63,64,-48,-27,-43,-44,-45,-46,-47,89,93,-14,-39,-49,-50,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,115,]),'EQUAL':([29,37,70,121,],[42,42,42,42,]),'INCREMENT':([29,121,],[43,43,]),'DECREMENT':([29,121,],[44,44,]),'LPAREN':([29,30,31,32,33,34,42,46,47,48,50,51,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[45,46,47,48,49,50,57,57,57,57,57,72,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'COMMA':([36,37,38,54,55,58,59,60,61,62,73,87,96,97,98,99,100,101,102,103,104,105,106,107,108,109,],[53,-13,-15,-48,-27,-43,-44,-45,-46,-47,-14,-39,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,]),'NOT':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'NUMBER':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'STRINGVAL':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'CHARVAL':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'TRUE':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FALSE':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'RPAREN':([43,44,45,54,55,58,59,60,61,62,63,64,66,67,68,71,72,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,119,120,],[-53,-54,65,-48,-27,-43,-44,-45,-46,-47,-51,-52,90,91,92,94,95,-39,109,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,125,126,]),'PLUS':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,74,-43,-44,-45,-46,-47,74,74,74,74,74,74,-28,-29,-30,-31,-32,74,74,74,74,74,74,74,74,-42,74,]),'MINUS':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,75,-43,-44,-45,-46,-47,75,75,75,75,75,75,-28,-29,-30,-31,-32,75,75,75,75,75,75,75,75,-42,75,]),'TIMES':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,76,-43,-44,-45,-46,-47,76,76,76,76,76,76,76,76,-30,-31,-32,76,76,76,76,76,76,76,76,-42,76,]),'DIVIDE':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,77,-43,-44,-45,-46,-47,77,77,77,77,77,77,77,77,-30,-31,-32,77,77,77,77,77,77,77,77,-42,77,]),'MOD':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,78,-43,-44,-45,-46,-47,78,78,78,78,78,78,78,78,-30,-31,-32,78,78,78,78,78,78,78,78,-42,78,]),'EQ':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,79,-43,-44,-45,-46,-47,79,79,79,79,79,79,-28,-29,-30,-31,-32,None,None,None,None,None,None,79,79,-42,79,]),'NE':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,80,-43,-44,-45,-46,-47,80,80,80,80,80,80,-28,-29,-30,-31,-32,None,None,None,None,None,None,80,80,-42,80,]),'LT':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,81,-43,-44,-45,-46,-47,81,81,81,81,81,81,-28,-29,-30,-31,-32,None,None,None,None,None,None,81,81,-42,81,]),'GT':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,82,-43,-44,-45,-46,-47,82,82,82,82,82,82,-28,-29,-30,-31,-32,None,None,None,None,None,None,82,82,-42,82,]),'LE':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,83,-43,-44,-45,-46,-47,83,83,83,83,83,83,-28,-29,-30,-31,-32,None,None,None,None,None,None,83,83,-42,83,]),'GE':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,84,-43,-44,-45,-46,-47,84,84,84,84,84,84,-28,-29,-30,-31,-32,None,None,None,None,None,None,84,84,-42,84,]),'AND':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,85,-43,-44,-45,-46,-47,85,85,85,85,85,85,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,85,85,-42,85,]),'OR':([54,55,58,59,60,61,62,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,],[-48,86,-43,-44,-45,-46,-47,86,86,86,86,86,86,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,86,86,-42,86,]),'ELSE':([118,],[124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'body':([4,],[5,]),'declaration_list':([4,],[6,]),'declaration':([4,6,],[7,18,]),'empty':([4,6,110,112,113,127,128,129,],[8,20,20,20,20,20,20,20,]),'type_specifier':([4,6,],[9,9,]),'statement_list':([6,110,112,113,127,128,129,],[17,114,116,117,130,131,132,]),'statement':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[19,39,19,19,19,39,39,39,19,19,19,39,39,39,]),'assignment':([6,9,17,49,110,112,113,114,115,116,117,127,128,129,130,131,132,],[21,38,21,69,21,21,21,21,119,21,21,21,21,21,21,21,21,]),'print':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'unary':([6,17,110,112,113,114,115,116,117,127,128,129,130,131,132,],[23,23,23,23,23,23,120,23,23,23,23,23,23,23,23,]),'if_statement':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statement':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'while_statement':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'func_statement_declaration':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'func_statement_call':([6,17,110,112,113,114,116,117,127,128,129,130,131,132,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'variable_list':([9,],[36,]),'expression':([42,46,47,48,50,56,57,74,75,76,77,78,79,80,81,82,83,84,85,86,93,],[55,66,67,68,71,87,88,96,97,98,99,100,101,102,103,104,105,106,107,108,111,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PROGRAM MAIN LBRACE body RBRACE','start',5,'p_start','myParser.py',12),
  ('body -> declaration_list statement_list','body',2,'p_code','myParser.py',17),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','myParser.py',22),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','myParser.py',23),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','myParser.py',24),
  ('declaration -> type_specifier variable_list SEMI','declaration',3,'p_declaration','myParser.py',32),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','myParser.py',37),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','myParser.py',38),
  ('type_specifier -> STRING','type_specifier',1,'p_type_specifier','myParser.py',39),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','myParser.py',40),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','myParser.py',41),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','myParser.py',42),
  ('variable_list -> ID','variable_list',1,'p_variable_list','myParser.py',47),
  ('variable_list -> variable_list COMMA ID','variable_list',3,'p_variable_list','myParser.py',48),
  ('variable_list -> assignment','variable_list',1,'p_variable_list','myParser.py',49),
  ('statement_list -> statement','statement_list',1,'p_statement_list','myParser.py',60),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','myParser.py',61),
  ('statement_list -> empty','statement_list',1,'p_statement_list','myParser.py',62),
  ('statement -> assignment SEMI','statement',2,'p_statement','myParser.py',70),
  ('statement -> print SEMI','statement',2,'p_statement','myParser.py',71),
  ('statement -> unary','statement',1,'p_statement','myParser.py',72),
  ('statement -> if_statement','statement',1,'p_statement','myParser.py',73),
  ('statement -> for_statement','statement',1,'p_statement','myParser.py',74),
  ('statement -> while_statement','statement',1,'p_statement','myParser.py',75),
  ('statement -> func_statement_declaration','statement',1,'p_statement','myParser.py',76),
  ('statement -> func_statement_call','statement',1,'p_statement','myParser.py',77),
  ('assignment -> ID EQUAL expression','assignment',3,'p_assignment','myParser.py',83),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','myParser.py',88),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','myParser.py',89),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','myParser.py',90),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','myParser.py',91),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','myParser.py',92),
  ('expression -> expression EQ expression','expression',3,'p_expression_comparison','myParser.py',97),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','myParser.py',98),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','myParser.py',99),
  ('expression -> expression GT expression','expression',3,'p_expression_comparison','myParser.py',100),
  ('expression -> expression LE expression','expression',3,'p_expression_comparison','myParser.py',101),
  ('expression -> expression GE expression','expression',3,'p_expression_comparison','myParser.py',102),
  ('expression -> NOT expression','expression',2,'p_expression_bool','myParser.py',107),
  ('expression -> expression AND expression','expression',3,'p_expression_bool','myParser.py',108),
  ('expression -> expression OR expression','expression',3,'p_expression_bool','myParser.py',109),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','myParser.py',117),
  ('expression -> NUMBER','expression',1,'p_expression_values','myParser.py',122),
  ('expression -> STRINGVAL','expression',1,'p_expression_values','myParser.py',123),
  ('expression -> CHARVAL','expression',1,'p_expression_values','myParser.py',124),
  ('expression -> TRUE','expression',1,'p_expression_values','myParser.py',125),
  ('expression -> FALSE','expression',1,'p_expression_values','myParser.py',126),
  ('expression -> ID','expression',1,'p_expression_id','myParser.py',131),
  ('print -> WRITELN LPAREN expression RPAREN','print',4,'p_print','myParser.py',136),
  ('print -> WRITE LPAREN expression RPAREN','print',4,'p_print','myParser.py',137),
  ('unary -> ID INCREMENT SEMI','unary',3,'p_unary','myParser.py',142),
  ('unary -> ID DECREMENT SEMI','unary',3,'p_unary','myParser.py',143),
  ('unary -> ID INCREMENT','unary',2,'p_unary','myParser.py',144),
  ('unary -> ID DECREMENT','unary',2,'p_unary','myParser.py',145),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','if_statement',11,'p_statement_if','myParser.py',150),
  ('if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','if_statement',7,'p_statement_if','myParser.py',151),
  ('for_statement -> FOR LPAREN assignment SEMI expression SEMI unary RPAREN LBRACE statement_list RBRACE','for_statement',11,'p_for_statement','myParser.py',159),
  ('for_statement -> FOR LPAREN assignment SEMI expression SEMI assignment RPAREN LBRACE statement_list RBRACE','for_statement',11,'p_for_statement','myParser.py',160),
  ('while_statement -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_statement',7,'p_while_statement','myParser.py',165),
  ('func_statement_declaration -> VOID ID LPAREN RPAREN LBRACE statement_list RBRACE','func_statement_declaration',7,'p_func_statement_declaration','myParser.py',170),
  ('func_statement_call -> ID LPAREN RPAREN SEMI','func_statement_call',4,'p_func_statement_call','myParser.py',175),
  ('empty -> <empty>','empty',0,'p_empty','myParser.py',180),
]
